apiVersion: apps/v1
kind: Deployment
metadata:
  name: unifi
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: unifi
      app.kubernetes.io/name: unifi
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: unifi
        app.kubernetes.io/name: unifi
    spec:
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: unifi-storage-claim
        - name: shared
          emptyDir: {}
        - name: shm
          emptyDir:
            medium: Memory
        - name: temp
          emptyDir: {}
        - name: varlogs
          emptyDir: {}
      containers:
        - name: unifi
          image: >-
            tccr.io/truecharts/unifi:7.3.76@sha256:1c550120dd2bb462f16bac6a54bee03be500c5118ab86bd4904a18143ea97bac
          ports:
            - name: comm
              containerPort: 8080
              protocol: TCP
            - name: web
              containerPort: 8880
              protocol: TCP
            - name: websecure
              containerPort: 8843
              protocol: TCP
            - name: main
              containerPort: 8443
              protocol: TCP
            - name: speedtest
              containerPort: 6789
              protocol: TCP
            - name: stun
              containerPort: 3478
              protocol: UDP
          env:
            - name: UMASK
              value: '2'
            - name: UMASK_SET
              value: '2'
            - name: S6_READ_ONLY_ROOT
              value: '1'
            - name: NVIDIA_VISIBLE_DEVICES
              value: void
            - name: TZ
              value: UTC
          resources:
            limits:
              cpu: '4'
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
          volumeMounts:
            - name: config
              mountPath: /unifi
            - name: shared
              mountPath: /shared
            - name: shm
              mountPath: /dev/shm
            - name: temp
              mountPath: /tmp
            - name: varlogs
              mountPath: /var/logs
          livenessProbe:
            tcpSocket:
              port: 8443
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            tcpSocket:
              port: 8443
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          startupProbe:
            tcpSocket:
              port: 8443
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 60
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities: {}
            privileged: false
            runAsNonRoot: true
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        supplementalGroups:
          - 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
      schedulerName: default-scheduler
      dnsConfig:
        options:
          - name: ndots
            value: '1'
      enableServiceLinks: false
  strategy:
    type: Recreate
  revisionHistoryLimit: 3
  progressDeadlineSeconds: 600
