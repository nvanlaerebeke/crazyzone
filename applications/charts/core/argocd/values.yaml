argo-cd:
  dex:
    enabled: false
  global:
    domain: argocd.crazyzone.be
  server:
    certificateSecret:
      enabled: false
    ingress:
      enabled: true
      hosts:
      - argocd.crazyzone.be
      tls: true
      annotations:
        traefik.ingress.kubernetes.io/router.tls: "true"
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: kube-system-allow-internal-only@kubernetescrd
      extraTls:
        - hosts:
          - argocd.crazyzone.be
          secretName: crazyzone-be-tls
    config:
      repositories: |
        - type: helm
          name: stable
          url: https://charts.helm.sh/stable
        - type: helm
          name: argo-cd
          url: https://argoproj.github.io/argo-helm
  configs:
    params:
      server.insecure: true
    cm:
      # Makes Argo CD generate absolute URLs and helps CLI login
      url: https://argocd.crazyzone.be
      resource.customizations.health.networking.k8s.io_Ingress: |
        hs = {}
        -- Healthy if controller set a status address
        if obj.status and obj.status.loadBalancer
          and obj.status.loadBalancer.ingress
          and #obj.status.loadBalancer.ingress > 0 then
          hs.status = "Healthy"
          hs.message = "LoadBalancer address present"
          return hs
        end

        -- Otherwise, for Traefik/hostPort setups, consider Healthy if rules exist
        if obj.spec and obj.spec.rules and #obj.spec.rules > 0 then
          hs.status = "Healthy"
          hs.message = "Ingress rules present (Traefik hostPort mode)"
          return hs
        end

        hs.status = "Progressing"
        hs.message = "Waiting for ingress status"
        return hs
    rbac:
      create: true
      policy.csv: |
        g, ArgoCDAdmins, role:admin
      policy.default: role:readonly
  applicationSet:
    enabled: false
  