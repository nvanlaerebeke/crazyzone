name: gitlab
tlssecret: secret-tls
hostname: git.crazyzone.be
namespace: gitlab

gitlab:
  global:
    hosts:
      domain: gitlab.crazyzone.be
    ingress:
      annotations: {}
      enabled: true
      tls:
         enabled: true
         secretName: secret-tls
      path: /
      pathType: Prefix
    initialRootPassword: 
      secret: gitlab-initial-root-password
      key: password

    ## https://docs.gitlab.com/charts/charts/globals#configure-gitaly-settings
    gitaly:
      enabled: true
      tls:
        enabled: true
        secretName: secret-tls

    ## https://docs.gitlab.com/charts/charts/globals#configure-minio-settings
    minio:
      enabled: true
      credentials: {}
        # secret:

    ## https://docs.gitlab.com/charts/charts/gitlab/kas/
    kas:
      enabled: true
      service:
        apiExternalPort: 8153 # port for connections from the GitLab backend

    ## https://docs.gitlab.com/charts/charts/globals#configure-registry-settings
    registry:
      bucket: registry
      certificate: {}
        # secret:
      httpSecret: {}
        # secret:
        # key:
      notificationSecret: {}
        # secret:
        # key:
      tls:
        enabled: true
        secretName: secret-tls

    ## https://docs.gitlab.com/charts/charts/globals#outgoing-email
    ## Email persona used in email sent by GitLab
    email:
      from: "nico.vanlaerebeke@gmail.com"
      display_name: GitLab
      reply_to: "nico.vanlaerebeke@gmail.com"
      subject_suffix: ""

    ## Timezone for containers.
    time_zone: CET

  ## Settings to for the Let's Encrypt ACME Issuer
  certmanager-issuer:
    # The email address to register certificates requested from Let's Encrypt.
    # Required if using Let's Encrypt.
    email: nico.vanlaerebeke@gmail.com

  ## Installation & configuration of jetstack/cert-manager
  ## See requirements.yaml for current version
  certmanager:
    install: false

  ## https://docs.gitlab.com/charts/charts/nginx/
  ## https://docs.gitlab.com/charts/architecture/decisions#nginx-ingress
  ## Installation & configuration of charts/ingress-nginx:
  nginx-ingress:
    enabled: true
    tcpExternalConfig: "true"
    controller:
      addHeaders:
        Referrer-Policy: strict-origin-when-cross-origin
      allowSnippetAnnotations: false
      config:
        hsts: "true"
        hsts-include-subdomains: "false"
        hsts-max-age: "63072000"
        server-name-hash-bucket-size: "256"
        use-http2: "true"
        ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4"
        ssl-protocols: "TLSv1.3 TLSv1.2"
        server-tokens: "false"
      service:
        externalTrafficPolicy: "Local"
      ingressClassByName: false
      ingressClassResource:
        name: '{{ include "ingress.class.name" $ }}'
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      publishService:
        enabled: true
      replicaCount: 2
      minAvailable: 1
      scope:
        enabled: true
      metrics:
        enabled: true
        service:
          annotations:
            gitlab.com/prometheus_scrape: "true"
            gitlab.com/prometheus_port: "10254"
            prometheus.io/scrape: "true"
            prometheus.io/port: "10254"
      admissionWebhooks:
        enabled: false
    defaultBackend:
      resources:
        requests:
          cpu: 5m
          memory: 5Mi
    rbac:
      create: true
      # Needed for k8s 1.20 and 1.21
      # https://github.com/kubernetes/ingress-nginx/issues/7510
      # https://github.com/kubernetes/ingress-nginx/issues/7519
      scope: false
    serviceAccount:
      create: true

  ## Installation & configuration of stable/prostgresql
  ## See requirements.yaml for current version
  postgresql:
    postgresqlUsername: gitlab
    # This just needs to be set. It will use a second entry in existingSecret for postgresql-postgres-password
    postgresqlPostgresPassword: bogus
    install: true
    postgresqlDatabase: gitlabhq_production
    image:
      tag: 12.7.0
    usePasswordFile: true
    existingSecret: bogus
    initdbScriptsConfigMap: bogus
    master:
      extraVolumeMounts:
        - name: custom-init-scripts
          mountPath: /docker-entrypoint-preinitdb.d/init_revision.sh
          subPath: init_revision.sh
      podAnnotations:
        postgresql.gitlab/init-revision: "1"
    metrics:
      enabled: true

  ## Automatic shared secret generation
  ## https://docs.gitlab.com/charts/installation/secrets
  ## https://docs.gitlab.com/charts/charts/shared-secrets.html
  shared-secrets:
    enabled: true
    rbac:
      create: true
    selfsign:
      image:
        # pullPolicy: IfNotPresent
        # pullSecrets: []
        repository: registry.gitlab.com/gitlab-org/build/cng/cfssl-self-sign
        # The digest below comes from a given tag pipeline because they are mirrored to .com,
        # ensuring that the image tag is available from both instances. The digest can be
        # found in the 'sync_images' job.
        #   https://dev.gitlab.org/gitlab/charts/components/images/-/tags
        tag: 1.6.1@sha256:e89392e13b4ef12cd48ba8c30326aacd89a8d0161cb081ac8dfbb77200d5ebac
      keyAlgorithm: "rsa"
      keySize: "4096"
      expiry: "3650d"
      caSubject: "GitLab Helm Chart"
    env: production
    serviceAccount:
      enabled: true
      create: true
      name: # Specify a pre-existing ServiceAccount name
    resources:
      requests:
        cpu: 50m
    securityContext:
      # in debian/alpine based images, this is `nobody:nogroup`
      runAsUser: 65534
      fsGroup: 65534
    tolerations: []
    podLabels: {}
    annotations: {}

  ## Installation & configuration of gitlab/gitlab-runner
  ## See requirements.yaml for current version
  gitlab-runner:
    install: true
    rbac:
      create: true
    runners:
      locked: false
      config: |
        [[runners]]
          [runners.kubernetes]
          image = "ubuntu:18.04"
          {{- if .Values.global.minio.enabled }}
          [runners.cache]
            Type = "s3"
            Path = "gitlab-runner"
            Shared = true
            [runners.cache.s3]
              ServerAddress = {{ include "gitlab-runner.cache-tpl.s3ServerAddress" . }}
              BucketName = "runner-cache"
              BucketLocation = "us-east-1"
              Insecure = false
          {{ end }}
    podAnnotations:
      gitlab.com/prometheus_scrape: "true"
      gitlab.com/prometheus_port: 9252

  ## Installation & configuration of stable/grafana
  ## See requirements.yaml for current version
  ## Controlled by `global.grafana.enabled`
  grafana:
    # Overrides the Grafana image tag for the 7.5.16 security update
    image:
      tag: 7.5.16
    ## Override and provide "bogus" administation secrets
    ## gitlab/gitlab-grafana provides overrides via shared-secrets
    nameOverride: grafana-app
    admin:
      existingSecret: bogus
    env:
      GF_SECURITY_ADMIN_USER: bogus
      GF_SECURITY_ADMIN_PASSWORD: bogus
    ## This override allows gitlab/gitlab-grafana to completely override the secret
    ##   handling behavior of the upstream chart in combination with the above.
    command: ["sh", "-x", "/tmp/scripts/import-secret.sh"]
    ## The following settings allow Grafana to dynamically create
    ## dashboards and datasources from configmaps. See
    ## https://artifacthub.io/packages/helm/grafana/grafana#sidecar-for-dashboards
    sidecar:
      dashboards:
        enabled: true
        label: gitlab_grafana_dashboard
      datasources:
        enabled: true
        label: gitlab_grafana_datasource
    ## We host Grafana as a sub-url of GitLab
    grafana.ini:
      server:
        serve_from_sub_path: true
        root_url: http://localhost/-/grafana/
      auth:
        login_cookie_name: gitlab_grafana_session
    ## We generate and provide random passwords
    ## NOTE: the Secret & ConfigMap names are hard coded!
    extraSecretMounts:
      - name: initial-password
        mountPath: /tmp/initial
        readOnly: true
        secretName: gitlab-grafana-initial-password
        defaultMode: 400
    extraConfigmapMounts:
      - name: import-secret
        mountPath: /tmp/scripts
        configMap: gitlab-grafana-import-secret
        readOnly: true
    testFramework:
      enabled: false

  ## Settings for individual sub-charts under GitLab
  ## Note: Many of these settings are configurable via globals
  gitlab:
    ## https://docs.gitlab.com/charts/charts/gitlab/toolbox
    toolbox:
      replicas: 1
      antiAffinityLabels:
        matchLabels:
          app: gitaly